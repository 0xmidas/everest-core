{
    "description": "This base interface defines an abstract ISO15118 Charger",
    "cmds": {
        "set_evseid": {
            "description": "Sets the ID that uniquely identifies the EVSE. The EVSEID shall match the following structure: <EVSEID> = <Country Code> <S> <EVSE Operator ID> <S> <ID Type> <Power Outlet ID>",
            "arguments" : {
                "id": {
                    "description": "EVSE ID",
                    "type": "string",
                    "pattern": "^[A-Z]{2}\\*[A-Z0-9]{3}\\*E[A-Z0-9][A-Z0-9\\*]{30}$"
                }
            }
        },
        "set_meter_reading": {
            "description": "Sets the current meter reading in Watthours from the EVSE.",
            "arguments" : {
                "id": {
                    "description": "Meter ID",
                    "type": "string",
                    "pattern": "/^[A-Za-z0-9]{1,32}$/"
                },
                "timestamp":{
                    "description": "Timestamp (unix epoch time)",
                    "type": "integer"
                },
                "value": {
                    "description": "Current meter reading",
                    "type": "number"
                }
            }
        },
        "set_evse_notification": {
            "description": "Sets a notification value used by the SECC to influence the behaviour of the EVCC. The EVSENotification contains an action that the SECC wants the EVCC to perform",
            "arguments" : {
                "notification": {
                    "description": "EVSE notification",
                    "type": "string",
                    "enum": ["None", "StopCharging", "ReNegotiation"]
                },
                "max_delay": {
                    "description": "Indicates the time in seconds until it expects the EVCC to react on the action request indicated in the coresponding EVSENotification",
                    "type": "integer"
                }
            }
        },
        "set_receipt_required": {
            "description": "Optional: Indicate that the EVCC is required to send a MeteringReceiptReq message for the purpose of signing the meter info record. If ReceiptRequired is equal to True, the EVCC is required to send a MeteringReceiptReq message including the signature.",
            "arguments" : {
                "receipt_required": {
                    "description": "Receipt required",
                    "type": "boolean"
                }
            }
        }
    },
    "vars": {
        "MISSING_evccid":{
            "description": "Contains the MAC adress of the EVCC in a human readable format (six hexadecimal encoded bytes)",
            "type": "string",
            "pattern": "^[A-Fa-f0-9]{2}(:[A-Fa-f0-9]{2}){5}$"
        },
        "selected_payment_option":{
            "description": "Used for indicating the selected payment type for services invoked by the EVCC",
            "type": "string",
            "enum": ["Contract", "ExternalPayment"]
        },
        "MISSING_selected_service": {
            "description": "Used for indicating a service selected by the EVCC",
            "type": "object"
        },
        "requested_energy_tranfer_mode":{
            "description": "Energy transfer mode requested by the EVCC.",
            "type": "string",
            "enum": ["AC_single_phase_core", "AC_three_phase_core", "DC_core", "DC_extended", "DC_combo_core", "DC_unique"]
        },
        "MISSING_charge_progress": {
            "description": "This message element is used to request the EVSE to fulfill all conditions that the energy transfer can start as soon as the EV onboard system begins to retrieve energy. If ChargeProgress is equal to ‘Start’ the EVSE is requested to prepare the energy flow for an immediate start, if ChargeProgress is equal to ‘Stop’ the EVSE is requested to stop the energy flow, if ChargeProgress is equal to ‘Renegotiate’ the energy flow is neither stopped nor started, instead the renegotiation mechanisms defined in this standard apply.",
            "type": "string",
            "enum": ["Start", "Stop", "Renegotiate"]
        },
        "MISSING_emaid": {
            "description": "The e-Mobility Account Identifier (EMAID) identifies the charging contract.",
            "type": "string",
            "pattern": "^[A-Za-z]{2}\\*[A-Za-z0-9]{3}\\*[A-Za-z0-9]{9}\\*[A-Za-z0-9]{0,1}$"
        },
        "departure_time": {
            "description": "Optional: Is used to indicate when the vehicle intends to finish the charging process. Format: hh:mm:ss",
            "type": "integer"
        }
    }
}
