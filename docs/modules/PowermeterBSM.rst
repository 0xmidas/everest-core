.. This file will be included in the autogenerated module documentation.
    Please keep the headline and insert your documentation below.

************************
Additional documentation
************************

Features:
=========
- implements powermeter interface, including "get_signed_meter_value", which returns a signed OCMF snapshot string.
- publishes variable "powermeter" of type Powermeter.
- cmd for requesting standard sunspec ac meter model.
- uses SerialCommHub or direct modbus.

Commands:
=========
- get_signed_meter_value: returns an OCMF formatted snapshot string.
- get_sunspec_ac_meter_value : returns json formatted standard sunspec model 203: "Standard SunSpec model of a three-phase energy meter"

Requirement:
============
Needs a SerialCommHub instance named "serial_com_0_connection" when configured to use SerialCommHub.


Configuration:
==============
- power_unit_id: Modbus unit_id, mostly 1
  type: integer
  minimum: 1
  maximum: 255
- sunspec_base_address: sunspec base address of device ( 0, 40000 or 50000 )
  type: integer
  default: 40000
- update_interval: Update interval in seconds of the published variable.
  type: integer
  minimum: 1
- watchdog_wakeup_interval: wakup interval of the internal module watchdog in seconds (default 60 seconds). This watchdog restarts the internal workers if necessary.
  type: integer
  minimum: 1
  default: 60
- serial_device: Serial port the BSM hardware is connected to. Ignored if use_serial_comm_hub is set to true.
  type: string
  default: /dev/ttyUSB0
- baud: Baud rate on RS-485, allowed value range: 2400 115200 (19200 is default). Ignored if use_serial_comm_hub is set to true.
  type: integer
  minimum: 2400
  maximum: 115200
  default: 19200
- use_serial_comm_hub: When enabled, use a serial serial_communication_hub, otherwise use the configured serial device.
  type: boolean
  default: true
- meter_id: Arbitrary string id, used as power_meter_id in interface powermeter.
  type: string
  default: no_meter_id
